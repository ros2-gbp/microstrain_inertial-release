%bcond_without tests
%bcond_without weak_deps

%global __os_install_post %(echo '%{__os_install_post}' | sed -e 's!/usr/lib[^[:space:]]*/brp-python-bytecompile[[:space:]].*$!!g')
%global __provides_exclude_from ^/opt/ros/kilted/.*$
%global __requires_exclude_from ^/opt/ros/kilted/.*$

%global __cmake_in_source_build 1

Name:           ros-kilted-microstrain-inertial-driver
Version:        4.6.0
Release:        2%{?dist}%{?release_suffix}
Summary:        ROS microstrain_inertial_driver package

License:        MIT
URL:            https://github.com/LORD-MicroStrain/microstrain_inertial
Source0:        %{name}-%{version}.tar.gz

Requires:       ros-kilted-diagnostic-aggregator
Requires:       ros-kilted-diagnostic-updater
Requires:       ros-kilted-geometry-msgs
Requires:       ros-kilted-lifecycle-msgs
Requires:       ros-kilted-microstrain-inertial-msgs
Requires:       ros-kilted-nav-msgs
Requires:       ros-kilted-nmea-msgs
Requires:       ros-kilted-rclcpp-lifecycle
Requires:       ros-kilted-rosidl-default-runtime
Requires:       ros-kilted-rtcm-msgs
Requires:       ros-kilted-sensor-msgs
Requires:       ros-kilted-std-msgs
Requires:       ros-kilted-std-srvs
Requires:       ros-kilted-tf2
Requires:       ros-kilted-tf2-geometry-msgs
Requires:       ros-kilted-tf2-ros
Requires:       ros-kilted-ros-workspace
BuildRequires:  GeographicLib-devel
BuildRequires:  curl
BuildRequires:  eigen3-devel
BuildRequires:  git
BuildRequires:  jq
BuildRequires:  libcurl-devel
BuildRequires:  ros-kilted-diagnostic-updater
BuildRequires:  ros-kilted-geometry-msgs
BuildRequires:  ros-kilted-lifecycle-msgs
BuildRequires:  ros-kilted-microstrain-inertial-msgs
BuildRequires:  ros-kilted-nav-msgs
BuildRequires:  ros-kilted-nmea-msgs
BuildRequires:  ros-kilted-rclcpp-lifecycle
BuildRequires:  ros-kilted-ros-environment
BuildRequires:  ros-kilted-rosidl-default-generators
BuildRequires:  ros-kilted-rtcm-msgs
BuildRequires:  ros-kilted-sensor-msgs
BuildRequires:  ros-kilted-std-msgs
BuildRequires:  ros-kilted-std-srvs
BuildRequires:  ros-kilted-tf2
BuildRequires:  ros-kilted-tf2-geometry-msgs
BuildRequires:  ros-kilted-tf2-ros
BuildRequires:  ros-kilted-ros-workspace
BuildRequires:  ros-kilted-rosidl-typesupport-fastrtps-c
BuildRequires:  ros-kilted-rosidl-typesupport-fastrtps-cpp
Provides:       %{name}-devel = %{version}-%{release}
Provides:       %{name}-doc = %{version}-%{release}
Provides:       %{name}-runtime = %{version}-%{release}
Provides:       ros-kilted-rosidl-interface-packages(member)

%if 0%{?with_tests}
BuildRequires:  ros-kilted-ament-cmake-gtest
BuildRequires:  ros-kilted-ament-cpplint
%endif

%if 0%{?with_weak_deps}
Supplements:    ros-kilted-rosidl-interface-packages(all)
%endif

%description
The ros_mscl package provides a driver for the LORD/Microstrain inertial
products.

%prep
%autosetup -p1

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/kilted/setup.sh" ]; then . "/opt/ros/kilted/setup.sh"; fi
mkdir -p .obj-%{_target_platform} && cd .obj-%{_target_platform}
%cmake3 \
    -UINCLUDE_INSTALL_DIR \
    -ULIB_INSTALL_DIR \
    -USYSCONF_INSTALL_DIR \
    -USHARE_INSTALL_PREFIX \
    -ULIB_SUFFIX \
    -DCMAKE_INSTALL_PREFIX="/opt/ros/kilted" \
    -DAMENT_PREFIX_PATH="/opt/ros/kilted" \
    -DCMAKE_PREFIX_PATH="/opt/ros/kilted" \
    -DSETUPTOOLS_DEB_LAYOUT=OFF \
%if !0%{?with_tests}
    -DBUILD_TESTING=OFF \
%endif
    ..

%make_build

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/kilted/setup.sh" ]; then . "/opt/ros/kilted/setup.sh"; fi
%make_install -C .obj-%{_target_platform}

%if 0%{?with_tests}
%check
# Look for a Makefile target with a name indicating that it runs tests
TEST_TARGET=$(%__make -qp -C .obj-%{_target_platform} | sed "s/^\(test\|check\):.*/\\1/;t f;d;:f;q0")
if [ -n "$TEST_TARGET" ]; then
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/kilted/setup.sh" ]; then . "/opt/ros/kilted/setup.sh"; fi
CTEST_OUTPUT_ON_FAILURE=1 \
    %make_build -C .obj-%{_target_platform} $TEST_TARGET || echo "RPM TESTS FAILED"
else echo "RPM TESTS SKIPPED"; fi
%endif

%files
/opt/ros/kilted

%changelog
* Tue Apr 22 2025 Rob Fisher <rob.fisher@parker.com> - 4.6.0-2
- Autogenerated by Bloom

* Tue Apr 15 2025 Rob Fisher <rob.fisher@parker.com> - 4.6.0-1
- Autogenerated by Bloom

* Thu Nov 07 2024 Rob Fisher <rob.fisher@parker.com> - 4.5.0-1
- Autogenerated by Bloom

* Mon Oct 07 2024 Rob Fisher <rob.fisher@parker.com> - 4.4.0-1
- Autogenerated by Bloom

* Wed May 15 2024 Rob Fisher <rob.fisher@parker.com> - 4.3.0-1
- Autogenerated by Bloom

* Thu Apr 04 2024 Rob Fisher <rob.fisher@parker.com> - 4.2.0-1
- Autogenerated by Bloom

* Tue Apr 02 2024 Rob Fisher <rob.fisher@parker.com> - 4.1.0-1
- Autogenerated by Bloom

* Wed Mar 06 2024 Rob Fisher <rob.fisher@parker.com> - 3.2.1-2
- Autogenerated by Bloom

